{"name":"Perfitmvc","tagline":"Performance Monitor Action Filters for ASP.NET MVC","body":"## PerfIt MVC!\r\n\r\nWindows performance monitoring for ASP.NET MVC controller actions\r\n\r\n[Adapted from PerfIt by Ali Kheyrollahi](https://github.com/aliostad/PerfIt)\r\n\r\n## How to install and use?\r\n1. Reference PerfItMvc in your ASP.NET MVC Application\r\n\r\n2. Decorate your controller actions with __PerfItMvcFilterAttribute__\r\n\r\n3. Add an [Installer class] (http://msdn.microsoft.com/en-us/library/system.configuration.install.installer.aspx) to your ASP.NET MVC Project\r\n\r\n4. Override Install and Uninstall methods of the newly added Installer class\r\n```c#\r\n  public override void Install(IDictionary stateSaver)\r\n  {\r\n\t  base.Install(stateSaver);\r\n\t  PerfItMvcRuntime.Install();\r\n  }\r\n\r\n  public override void Uninstall(IDictionary savedState)\r\n  {\r\n\t  base.Uninstall(savedState);\r\n\t  PerfItMvcRuntime.Uninstall();\r\n  }\r\n```\r\n\r\n5. Open Visual Studio Developer Command prop as __Administrator_\r\n\r\n6. Enter InstallUtil.exe -i \" < Path to your ASP.NET MVC app DLL > \"\r\n   \r\n   _To Uninstall you can use -u switch_\r\n\r\n7. In you Global.asax file \r\n * PerfItMvcRuntime.Start(\"PerfItMvc.SampleApp\") to Application_Start()\r\n * PerfItMvcRuntime.Stop() to Application_End()\r\n\r\n## Samples\r\n* For sample usage please refer to the [Sample ASP.NET MVC 4 App] (/src/PerfItMvc/PerfItMvc.SampleApp)\r\n* You can refer to Ali Kheyrollahi's [blog post](http://byterot.blogspot.co.uk/2013/04/Monitor-your-ASP-NET-Web-API-application-using-your-own-custom-counters.html) for installation of the original PerfIt.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}